# --------------------------------------------------------------------
# ベース: 公式の軽量 Python 3.11 slim
# slim系は不要パッケージが少なく、サイズと脆弱性リスクを抑えやすい
# --------------------------------------------------------------------
FROM python:3.11-slim AS base

# --------------------------------------------------------------------
# 便利な環境変数（バイトコード未生成・バッファ無効・pipキャッシュ無効・TZ）
# --------------------------------------------------------------------
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    TZ=Asia/Tokyo

# --------------------------------------------------------------------
# OSパッケージ導入：tzdata（タイムゾーン）、curl/ca-certificates（ヘルス/通信）
# ビルド後にAPTキャッシュは削除してサイズを抑える
# --------------------------------------------------------------------
RUN apt-get update && \
    apt-get install -y --no-install-recommends tzdata curl ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# --------------------------------------------------------------------
# アプリ実行用の非rootユーザを作成（最小権限）
# UIDを固定するとK8s/ホスト側の権限管理もしやすい
# --------------------------------------------------------------------
RUN useradd -u 10001 -m app
WORKDIR /app

# --------------------------------------------------------------------
# 依存パッケージを先にコピー → 層キャッシュを最大活用
# requirements.txt はリポジトリ直下 or このサービス配下に置いておく
# --------------------------------------------------------------------
COPY requirements.txt ./requirements.txt

# --------------------------------------------------------------------
# Python依存をインストール
# （ビルド拡張が無ければ追加のbuild-essential等は不要。必要なら入れる）
# 例：lightgbmやlxmlのソースビルドが必要なら gcc 等を別ステージで導入
# --------------------------------------------------------------------
RUN pip install -r requirements.txt

# --------------------------------------------------------------------
# アプリ本体をコピー
# ここでは /app/main.py（エントリ） を想定
# --------------------------------------------------------------------
COPY main.py ./main.py
# 必要に応じて: COPY src/ ./src

# --------------------------------------------------------------------
# 所有者を非rootユーザに変更して権限を明確化
# --------------------------------------------------------------------
RUN chown -R app:app /app
USER app

# --------------------------------------------------------------------
# 健康監視やLivenessで叩くための簡易エンドポイントをHTTPで持たせるなら
# EXPOSEは任意（ComposeやK8s側でのポート公開が前提なら省略可）
# EXPOSE 8080
# --------------------------------------------------------------------

# --------------------------------------------------------------------
# デフォルトCMD：-u で標準出力をバッファしない（ログをリアルタイムに）
# --------------------------------------------------------------------
CMD ["python", "-u", "main.py"]
